<!DOCTYPE html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.15/d3.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.11.2/moment-with-locales.min.js"></script>

<style type="text/css">
  .chart rect {
    fill: steelblue;
    stroke: white;
  }

  .link {
    stroke: #000;
    stroke-width: 1.5px;
  }

  .node {
    fill: #000;
    stroke: #fff;
    stroke-width: 1.5px;
  }

  .node.a { fill: #1f77b4; }
  .node.b { fill: #ff7f0e; }
  .node.c { fill: #2ca02c; }
</style>

<body>
  <script>
      var ws = new WebSocket("ws://localhost:12345/updates");

      var width = 960,
          height = 500;

      var color = d3.scale.category10();

      var nodes = [],
          links = [];

      var force = d3.layout.force()
          .nodes(nodes)
          .links(links)
          .charge(-400)
          .linkDistance(linkDist)
          .size([width, height])
          .on("tick",tick);

      var svg = d3.select("body").append("svg")
          .attr("width", width)
          .attr("height", height);

      var node = svg.selectAll(".node"),
          link = svg.selectAll(".link");

      function linkDist(l,li){
        return l.cost * 60
      }

      function update(data) {
        // Add any nodes
        data.nodes.forEach(function(n){
          nodes.push(n);
        });

        links = []
        data.links.forEach(function(l){
          links.push({source: nodes[l.source],target: nodes[l.target], cost: l.cost});
        });
        force.links(links)

        start();
      };

      function start() {
        link = link.data(force.links(), function(d) { return d.source.id + "-" + d.target.id; });
        link.enter().insert("line", ".node").attr("class", "link");
        link.exit().remove();

        node = node.data(force.nodes(), function(d) { return d.id;});
        node.enter().append("circle").attr("class", function(d) { return "node " + d.id; }).attr("r", 8);
        node.exit().remove();

        force.start();
      }

      ws.onmessage = function(e) {
        var data = JSON.parse(e.data);
        if(data.hasOwnProperty("Log")){
          console.log(moment(data.T/1000) + ": node(" + data.NodeID + ") " + data.Log);
        }

        //update(data);
      };

      function tick() {
        console.log("tick")
        node.attr("cx", function(d) { return d.x; })
            .attr("cy", function(d) { return d.y; })

        link.attr("x1", function(d) { return d.source.x; })
            .attr("y1", function(d) { return d.source.y; })
            .attr("x2", function(d) { return d.target.x; })
            .attr("y2", function(d) { return d.target.y; });
      };

      function run(){
        d3.xhr("/run").get(function( data ) {
          console.log("Requested run");
        });
      };
  </script>
  <div id="graph-area"></div>
  <input type="button" id="runBtn" value="Run" onclick="run()"></input>
</body>


