// Code generated by protoc-gen-go.
// source: tracer.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	tracer.proto

It has these top-level messages:
	LogRequest
	LogResponse
	NodeUpdateRequest
	NodeUpdateResponse
	EdgeUpdateRequest
	EdgeUpdateResponse
	MessageUpdateRequest
	MessageUpdateResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto1.ProtoPackageIsVersion1

type LogRequest struct {
	Message string `protobuf:"bytes,1,opt,name=Message" json:"Message,omitempty"`
}

func (m *LogRequest) Reset()                    { *m = LogRequest{} }
func (m *LogRequest) String() string            { return proto1.CompactTextString(m) }
func (*LogRequest) ProtoMessage()               {}
func (*LogRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type LogResponse struct {
}

func (m *LogResponse) Reset()                    { *m = LogResponse{} }
func (m *LogResponse) String() string            { return proto1.CompactTextString(m) }
func (*LogResponse) ProtoMessage()               {}
func (*LogResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type NodeUpdateRequest struct {
}

func (m *NodeUpdateRequest) Reset()                    { *m = NodeUpdateRequest{} }
func (m *NodeUpdateRequest) String() string            { return proto1.CompactTextString(m) }
func (*NodeUpdateRequest) ProtoMessage()               {}
func (*NodeUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type NodeUpdateResponse struct {
}

func (m *NodeUpdateResponse) Reset()                    { *m = NodeUpdateResponse{} }
func (m *NodeUpdateResponse) String() string            { return proto1.CompactTextString(m) }
func (*NodeUpdateResponse) ProtoMessage()               {}
func (*NodeUpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type EdgeUpdateRequest struct {
}

func (m *EdgeUpdateRequest) Reset()                    { *m = EdgeUpdateRequest{} }
func (m *EdgeUpdateRequest) String() string            { return proto1.CompactTextString(m) }
func (*EdgeUpdateRequest) ProtoMessage()               {}
func (*EdgeUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type EdgeUpdateResponse struct {
}

func (m *EdgeUpdateResponse) Reset()                    { *m = EdgeUpdateResponse{} }
func (m *EdgeUpdateResponse) String() string            { return proto1.CompactTextString(m) }
func (*EdgeUpdateResponse) ProtoMessage()               {}
func (*EdgeUpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type MessageUpdateRequest struct {
}

func (m *MessageUpdateRequest) Reset()                    { *m = MessageUpdateRequest{} }
func (m *MessageUpdateRequest) String() string            { return proto1.CompactTextString(m) }
func (*MessageUpdateRequest) ProtoMessage()               {}
func (*MessageUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type MessageUpdateResponse struct {
}

func (m *MessageUpdateResponse) Reset()                    { *m = MessageUpdateResponse{} }
func (m *MessageUpdateResponse) String() string            { return proto1.CompactTextString(m) }
func (*MessageUpdateResponse) ProtoMessage()               {}
func (*MessageUpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func init() {
	proto1.RegisterType((*LogRequest)(nil), "proto.LogRequest")
	proto1.RegisterType((*LogResponse)(nil), "proto.LogResponse")
	proto1.RegisterType((*NodeUpdateRequest)(nil), "proto.NodeUpdateRequest")
	proto1.RegisterType((*NodeUpdateResponse)(nil), "proto.NodeUpdateResponse")
	proto1.RegisterType((*EdgeUpdateRequest)(nil), "proto.EdgeUpdateRequest")
	proto1.RegisterType((*EdgeUpdateResponse)(nil), "proto.EdgeUpdateResponse")
	proto1.RegisterType((*MessageUpdateRequest)(nil), "proto.MessageUpdateRequest")
	proto1.RegisterType((*MessageUpdateResponse)(nil), "proto.MessageUpdateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for TraceService service

type TraceServiceClient interface {
	Log(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (*LogResponse, error)
	NodeUpdate(ctx context.Context, in *NodeUpdateRequest, opts ...grpc.CallOption) (*NodeUpdateResponse, error)
	EdgeUpdate(ctx context.Context, in *EdgeUpdateRequest, opts ...grpc.CallOption) (*EdgeUpdateResponse, error)
	MessageUpdate(ctx context.Context, in *MessageUpdateRequest, opts ...grpc.CallOption) (*MessageUpdateResponse, error)
}

type traceServiceClient struct {
	cc *grpc.ClientConn
}

func NewTraceServiceClient(cc *grpc.ClientConn) TraceServiceClient {
	return &traceServiceClient{cc}
}

func (c *traceServiceClient) Log(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (*LogResponse, error) {
	out := new(LogResponse)
	err := grpc.Invoke(ctx, "/proto.TraceService/Log", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *traceServiceClient) NodeUpdate(ctx context.Context, in *NodeUpdateRequest, opts ...grpc.CallOption) (*NodeUpdateResponse, error) {
	out := new(NodeUpdateResponse)
	err := grpc.Invoke(ctx, "/proto.TraceService/NodeUpdate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *traceServiceClient) EdgeUpdate(ctx context.Context, in *EdgeUpdateRequest, opts ...grpc.CallOption) (*EdgeUpdateResponse, error) {
	out := new(EdgeUpdateResponse)
	err := grpc.Invoke(ctx, "/proto.TraceService/EdgeUpdate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *traceServiceClient) MessageUpdate(ctx context.Context, in *MessageUpdateRequest, opts ...grpc.CallOption) (*MessageUpdateResponse, error) {
	out := new(MessageUpdateResponse)
	err := grpc.Invoke(ctx, "/proto.TraceService/MessageUpdate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TraceService service

type TraceServiceServer interface {
	Log(context.Context, *LogRequest) (*LogResponse, error)
	NodeUpdate(context.Context, *NodeUpdateRequest) (*NodeUpdateResponse, error)
	EdgeUpdate(context.Context, *EdgeUpdateRequest) (*EdgeUpdateResponse, error)
	MessageUpdate(context.Context, *MessageUpdateRequest) (*MessageUpdateResponse, error)
}

func RegisterTraceServiceServer(s *grpc.Server, srv TraceServiceServer) {
	s.RegisterService(&_TraceService_serviceDesc, srv)
}

func _TraceService_Log_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(LogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(TraceServiceServer).Log(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _TraceService_NodeUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(NodeUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(TraceServiceServer).NodeUpdate(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _TraceService_EdgeUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(EdgeUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(TraceServiceServer).EdgeUpdate(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _TraceService_MessageUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(MessageUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(TraceServiceServer).MessageUpdate(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _TraceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TraceService",
	HandlerType: (*TraceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Log",
			Handler:    _TraceService_Log_Handler,
		},
		{
			MethodName: "NodeUpdate",
			Handler:    _TraceService_NodeUpdate_Handler,
		},
		{
			MethodName: "EdgeUpdate",
			Handler:    _TraceService_EdgeUpdate_Handler,
		},
		{
			MethodName: "MessageUpdate",
			Handler:    _TraceService_MessageUpdate_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x29, 0x4a, 0x4c,
	0x4e, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xb2, 0x5c, 0x5c,
	0x3e, 0xf9, 0xe9, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0xfc, 0x5c, 0xec, 0xbe, 0xa9,
	0xc5, 0xc5, 0x89, 0xe9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x4a, 0xbc, 0x5c, 0xdc, 0x60,
	0xe9, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x25, 0x61, 0x2e, 0x41, 0xbf, 0xfc, 0x94, 0xd4, 0xd0,
	0x82, 0x94, 0xc4, 0x92, 0x54, 0xa8, 0x26, 0x25, 0x11, 0x2e, 0x21, 0x64, 0x41, 0x84, 0x52, 0xd7,
	0x94, 0x74, 0x4c, 0xa5, 0xc8, 0x82, 0x50, 0xa5, 0x62, 0x5c, 0x22, 0x50, 0x5b, 0x51, 0x55, 0x8b,
	0x73, 0x89, 0xa2, 0x89, 0x43, 0x34, 0x18, 0xf5, 0x31, 0x71, 0xf1, 0x84, 0x80, 0x3c, 0x13, 0x9c,
	0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0xa4, 0xc3, 0xc5, 0x0c, 0x74, 0xa6, 0x90, 0x20, 0xc4, 0x6f,
	0x7a, 0x08, 0x1f, 0x49, 0x09, 0x21, 0x0b, 0x41, 0xb4, 0x0b, 0x39, 0x72, 0x71, 0x21, 0x1c, 0x2c,
	0x24, 0x01, 0x55, 0x81, 0xe1, 0x31, 0x29, 0x49, 0x2c, 0x32, 0x08, 0x23, 0x10, 0x1e, 0x81, 0x1b,
	0x81, 0xe1, 0x61, 0xb8, 0x11, 0x98, 0xbe, 0x16, 0xf2, 0xe2, 0xe2, 0x45, 0xf1, 0x9d, 0x90, 0x34,
	0x54, 0x2d, 0xb6, 0xb0, 0x90, 0x92, 0xc1, 0x2e, 0x09, 0x31, 0x2b, 0x89, 0x0d, 0x2c, 0x69, 0x0c,
	0x08, 0x00, 0x00, 0xff, 0xff, 0x5f, 0x23, 0xab, 0xd5, 0xe3, 0x01, 0x00, 0x00,
}
